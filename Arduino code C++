#include <Servo.h>
#include <Keypad.h>

String codigo = "0000";   // Senha atual
String acesso = "";   // Senha temporária para tentativa
int tentativas = 0;   // Contador de caracteres
int erros = 0;        // Contador de erros de senha
int ledVermelho = 11;
int ledVerde = 10;
int ledAzul = 13;
Servo fechadura;

const byte numRows= 4; 
const byte numCols= 4; 
char keymap[numRows][numCols]= {
  {'1', '2', '3', 'A'}, 
  {'4', '5', '6', 'B'}, 
  {'7', '8', '9', 'C'},
  {'*', '0', '#', 'D'}
};

byte rowPins[numRows] = {9,8,7,6};
byte colPins[numCols]= {5,4,3,2}; 

Keypad myKeypad= Keypad(makeKeymap(keymap), rowPins, colPins, numRows, numCols);

void setup(){
    pinMode(ledVermelho, OUTPUT); 
    pinMode(ledVerde, OUTPUT);
    pinMode(ledAzul, OUTPUT);
    fechadura.attach(12);
    fechadura.write(0);
    Serial.begin(9600);
    digitalWrite(ledAzul, HIGH);
    Serial.print("APERTE 'A' PARA INICIAR O PROCESSO\n");  
}

void loop()
{
    char keypressed = myKeypad.getKey();
    if (keypressed != NO_KEY){
        if (keypressed == 'A'){
            tentativas = 0;
            erros = 0;
            acesso = "";
            verificarSenha();
        }
    }
}

void verificarSenha(){
    while (erros < 3) {  // Permite até 3 tentativas
        Serial.print("\nINSIRA A SENHA (MAX. 4)\n");
        acesso = "";
        tentativas = 0;
        
        while (tentativas < 4){
            char keypressed = myKeypad.getKey();
            if (keypressed != NO_KEY){
                acesso += keypressed;
                Serial.print('*');
                tentativas++;
            }
        }
        
        Serial.print("\n\nPROCESSANDO...");
        delay(1000);

        if (acesso == codigo) {
            // Senha correta
            digitalWrite(ledAzul, LOW);
            digitalWrite(ledVerde, HIGH);
            Serial.print("\n\nSENHA CORRETA\n");
            delay(2500);
            Serial.print("\nACESSANDO...\n");
            delay(1000);
            Serial.print("\nACESSO LIBERADO!\n");
            fechadura.write(90);
            delay(9000);
            fechadura.write(0);
            Serial.print("\nCOFRE FECHANDO...\n");
            digitalWrite(ledVerde, LOW);
            return;
        } else {
            // Senha incorreta
            digitalWrite(ledAzul, LOW);
            digitalWrite(ledVermelho, HIGH);
            Serial.print("\n\nERRO! SENHA INCORRETA\n");
            delay(2000);
            digitalWrite(ledVermelho, LOW);
            erros++;
        }
    }

    // Se atingir o limite de tentativas, solicitar código de redefinição
    solicitarCodigoRedefinicao();
}

void solicitarCodigoRedefinicao() {
    Serial.print("\nTENTATIVAS EXCEDIDAS! INSIRA O CÓDIGO DE REDEFINIÇÃO\n");

    String redefinicao = "";
    while (redefinicao != "0000") {  // Código de redefinição "0000"
        redefinicao = "";
        Serial.print("\nINSIRA O CÓDIGO DE REDEFINIÇÃO (MAX. 4)\n");
        
        int contador = 0;
        while (contador < 4) {
            char keypressed = myKeypad.getKey();
            if (keypressed != NO_KEY) {
                redefinicao += keypressed;
                Serial.print('*');
                contador++;
            }
        }

        if (redefinicao != "0000") {
            Serial.print("\nCÓDIGO DE REDEFINIÇÃO INCORRETO\n");
            delay(2000);
        }
    }

    // Redefinir senha após código de redefinição correto
    Serial.print("\nCÓDIGO DE REDEFINIÇÃO CORRETO. INSIRA UMA NOVA SENHA\n");
    codigo = "";
    tentativas = 0;
    while (tentativas < 4) {
        char keypressed = myKeypad.getKey();
        if (keypressed != NO_KEY) {
            codigo += keypressed;
            Serial.print('*');
            tentativas++;
        }
    }
    Serial.print("\nNOVA SENHA ARMAZENADA\n");
    erros = 0;  // Resetar contagem de erros
}
